(* 
Name: Data-driven end to end custom bag processing
Description: Driven by an excel spreadsheet of test scenario values, this script executes and end to end custom bag flow on the scenario. 
Author: Himanshu Bhardwaj & Andy Jenkins
 *)

//declare login variables
global username, password, DCAUser, DCAPswrd

//declare data variables
global coNum, moNum, dataIndex, custNum, custPO, tag, delTerm,coType
global delMeth, style, color, ConfigCode,trnsctnResn,Priority,blnktAgrmnt

//initialize test variables
"DataStore".setGlobalsScript1

//initialize data line counter
put 2 into dataIndex

(************** Start Test ***************)
repeat forever
	
	(************** Set up data *************)
	
	//skip known bad entries in test data
	put (0) into badData //these  are having item code of Accesories
	repeat while dataIndex is in badData
		put dataIndex + 1 into dataIndex
	end repeat
	
	//initialize data variables (sets global data variables and logs them)
	DataStore.setDataScript1 dataIndex
	logData
	//increment counter
	put dataIndex + 1 into dataIndex
	//break if no more data
	if custNum is empty then exit repeat
	
	(************** Start flow ****************)
	"Flows/Application".login username, password
	
	(************** Order entry ***************)
	//"Flows/OrderEntry".enterNewOrder custNum, "", custPO
	
	"Flows/OrderEntry".GenericOrderEntry custNum, coType, custPO, tag, delTerm, delMeth, trnsctnResn //blnktAgrmnt
	put "Flows/OrderEntry".recordCONumber() into coNum
	"Flows/OrderEntry".enterProduct style, ConfigCode
	
	(*************** To Apply Blanket  Agreement **********************)
	put blnktAgrmnt into BlanketAgreement
	"Flows/OrderEntry".ApplyBlanketAgreement BlanketAgreement
	
	(**************** To Close Order entry Screen ****************************)
	"M3/OIS101".closeFromOrderLines
	
	(************** Exit *********************)
	"Flows/Application".exitApp
	
	//end repeat	
	
	(************** Scheduling ***************)
	wait 5
	"Flows/Application".login username, password
	"Flows/Scheduling".doScheduling coNum
	
	put "M3/PMS100".recordMO() into moNum
	
	(************** Picking ******************)
	"Flows/Picking".doPicking
	
	(*
	(************** Manufacturing *************)
	wait 5
	"Flows/Other".recordRun coNum, moNum, schedNum, delNum
	"Flows/ManufacturingPacking".doDCAManufacturing DCAUser, DCAPswrd, moNum
	
	(************** Packing ******************)
	(*put "Flows/ManufacturingPacking".validatePacking(username,password,coNum) into delNum*)
	"Flows/Other".recordRun coNum, moNum, schedNum, delNum
	
	
(************** Shipping *****************)
"Flows/Shipping".doShipping delNum
"Flows/Shipping".validateShipping coNum
*)	
	
	logData
end repeat


to logData
	global dataIndex
	global coNum
	global moNum
	global custNum
	global custPO
	global tag
	global delTerm
	global delMeth
	global style
	global color
	Log "1A-Results:" && dataIndex && coNum && moNum && custNum && custPO && tag && delTerm && delMeth && style && color && configCode
end logData

to doFullRun
	//declare test variables
	global username, password, customerNum, coType, PO
	global itemCode, productQuantity, DCAUser, DCAPswrd
	
	//declare data variables
	global dataIndex, custNum, custPO, tag, delTerm
	global delMeth, style, color, ConfigCode,BlnktAgrmnt,Priority 
	//initialize test variables
	"DataStore".setGlobalsScript1
	//initialize data line counter
	put 10 into dataIndex
	repeat for 5 times
		//initialize data variables (sets global data variables and logs them)
		DataStore.setDataScript1 dataIndex
		logData
		
		//increment counter
		put dataIndex + 1 into dataIndex
		
		//break if no more data
		//if custNum is empty then exit repeat
		
		(************** Start flow ****************)
		"Flows/Application".login username, password
		
		(************** Order entry ***************)
		//"Flows/OrderEntry".enterNewOrder custNum, coType, custPO
		--"Flows/OrderEntry".GenericOrderEntry custNum, coType, custPO, tag, delTerm, delMeth, BlnktAgrmnt
		"Flows/OrderEntry".orderWithDeliveryInfo custNum, custPO,delTerm,delMeth,"CSH",Priority // parameterList ( custNum,custPO,delTerm,delMeth,payMeth, priority)
		--"Flows/OrderEntry". CreateNewOrder custNum, coType, custPO, tag, delTerm, delMeth,trnsctnResn,BlnktAgrmnt
		put "Flows/OrderEntry".recordCONumber() into coNum
		"Flows/OrderEntry".enterProduct color,"", productQuantity,ConfigCode  // Parameters: colorSKU, PromoCod,itemQty, ConfigurationNo
		
		"M3/OIS101".closeFromOrderLines
		
		(************** Exit *********************)
		"Flows/Application".exitApp
		(*
		"Flows/Application".login username, password
		put doScheduling(coNum) into schedNum
		if schedNum <> "noStock"
			LogSuccess "Scheduling Done For this CO"
		else 
			next repeat
		end if
		
		(************** Exit ******************** *)
		"Flows/Application".exitApp   *)
	end repeat 
	
end doFullRun


to doScheduling coNumber
	Log "Do scheduling"
	"M3/PMS170".open
	"M3/PMS170".lookUp coNumber
	put "M3/PMS170".recordProdNum into prodNum
	if  "M3/RPS010".inventoryCheck() is "inStock"
		put "M3/PMS170".createScheduleNumber() into scheduleNumber
		"M3/PMS170".scheduleNew scheduleNumber
		"M3/PMS170".releaseMO
		"M3/PMS170".close
		"M3/PMS100".open
		"M3/PMS100".lookupSchedule scheduleNumber
		"M3/PMS100".printShopTraveler scheduleNumber
		return scheduleNumber
	else
		"M3/PMS170".close
		LogWarning "Insuuficient Stock in Inventory for CO# :- "&coNumber
		return "noStock"
	end if
end doScheduling

to readColorNenterQty itemColor, itemQty
	if imageFound(waitFor:5, ImageName: "M3/OIS101/ItemColorField/colorColoumn")
		set gridHeader to "M3/OIS101/ItemColorField/colorColoumn"
		do DoubleClick && (foundImageLocation() +(100,16))
		
	else 
		LogError "Not  able to Find Color Grid"
		exit handler
	end if
	put imageRectangle(GridHeader) into myRectangle
	set imageLeft = left (myRectangle)+ 5
	set imageRight = right(myRectangle)
	set imageBottom = bottom(myRectangle) +4
	set targetBottom = imageBottom +16
	"M3/Application".checkZoomLevel 110
	set colorFound to 0
	set count to 1
	Repeat until colorFound is 1
		set UL = (imageLeft, imageBottom)
		set BR = (imageRight, targetBottom)
		set the SearchRectangle to (UL,BR)
		set myRectangle to searchRectangle
		set colorLine to readText (searchRectangle()) 
		Log colorLine 
		if colorLine contains itemColor &"-"
			set colorFound to 1
			do DoubleClick && (BR + ((18), (-9)))
			typeText itemQty
			Log "Item Colour: " &colorLine &"; Found at : "& count &" Line"

		else if colorLine contains "Close" 
			LogError "Bottom of Page Reached"
			exit Repeat
		else
			TypeText downArrow
			set  imageBottom to  targetBottom+ 1
			set targetBottom = imageBottom +23
			set count to count +1
			wait 1
		end if
		
	End repeat	
	set the  SearchRectangle to ()
	"M3/Application".checkZoomLevel 75
	if colorFound is 1 
		Click Image:"M3/OIS101/ConfiqStyleButton", WaitFor:10
	else 
		LogError "Color could not be Found "	
end if
end readColorNenterQty

---------------------------->>>>>>>>>>> >  >  >  >  >  >--------------------------------------------------------------------


doFullRun

set itemColor to 660
set  itemQty to 1
readColorNenterQty1 itemColor, itemQty

-- for Issue#41



---------------------------->>>>>>>>>>> >  >  >  >  >  >--------------------------------------------------------------------
to readColorNenterQty1 itemColor, itemQty
	if imageFound(waitFor:5, ImageName: "M3/OIS101/ItemColorField/colorColoumn") then"M3/Application".checkZoomLevel 110
	
	if imageFound("M3/OIS101/ItemColorField/colorBlock/") 
		set gridHeader to "M3/OIS101/ItemColorField/colorBlock/"
		do DoubleClick && (foundImageLocation() +(100,0))
		else 
		LogError "Not  able to Find Color Grid"
		exit handler
	end if
	put imageRectangle(GridHeader) into myRectangle
	set imageLeft = left (myRectangle)- 114
	set imageRight = left(myRectangle) - 2
	set imageBottom = bottom(myRectangle)
	set imageTop = top(myRectangle) +1
	set targetBottom = imageBottom +23
	
	set colorFound to 0
	set count to 1
	Repeat until colorFound is 1
		set UL = (imageLeft, imageTop)
		set BR = (imageRight, imageBottom)
		set the SearchRectangle to (UL,BR)
		set myRectangle to searchRectangle
		set colorLine to readText (searchRectangle()) 
		Log colorLine 
		if colorLine contains itemColor &"-"
			set colorFound to 1
			do DoubleClick && (BR + ((28), (-12)))
			typeText itemQty
			Log "Item Colour: " &colorLine &"; Found at : "& count &" Line"
		else if colorLine contains "Close" 
			LogError "Bottom of Page Reached"
			exit Repeat
		else if count = 10
			set the  SearchRectangle to ()
			repeat 14 times
				TypeText  downArrow
			end repeat
			if imageFound(10,Text: colorLine) then do DoubleClick && foundImageLocation()
			--do	DoubleClick && (288,409)
			if imageFound("M3/OIS101/ItemColorField/colorBlock/") 
				set gridHeader1 to "M3/OIS101/ItemColorField/colorBlock/"
				put imageRectangle(GridHeader1) into myRectangle
				set imageLeft = left (myRectangle)- 114
				set imageRight = left(myRectangle) - 2
				set imageBottom = bottom(myRectangle)
				set imageTop = top(myRectangle) +1
				set targetBottom = imageBottom +23
				set count  to count +1
			end if
			
		else --if count is less than 8
			TypeText downArrow
			set  imageTop to imageBottom+ 1
			set imageBottom = imageTop +23
			set count to count +1
			wait 1
		end if
		
	End repeat	
	set the  SearchRectangle to ()
	"M3/Application".checkZoomLevel 75
	if colorFound is 1 
		Click Image:"M3/OIS101/ConfiqStyleButton", WaitFor:10
	else 
		LogError "Color could not be Found "	
	end if
end readColorNenterQty1
