
// declare login variables
global username
global password

// initialize data line counter
put 2 into dataIndex

// initialize login variables
"Datastore".setLoginVariables 4
global customerNumber,  coType, PO, TagField, DeliveryTerm, DeliveryMethod, WHNumber
global itemCode, quantity, PromoCod, TranctionResonCode, BlanketAgreement

//initialize test variables
"Datastore".SetDataScript6 dataIndex


(************** Login To Application ****************)
"Flows/Application".login username, password
(************** Start Test *********************)
repeat forever
	"Datastore".SetDataScript6 dataIndex
	//increment counter
	put dataIndex + 1 into dataIndex
	
	//break if no more data
	if customerNumber is empty then exit repeat
	
	(************** Order entry ***************)
	"Flows/OrderEntry".GenericOrderEntry customerNumber, coType, PO, TagField, DeliveryTerm, DeliveryMethod, TranctionResonCode
	
	(************* To recod CO Number ******************************)
	put "Flows/OrderEntry".recordCONumber() into coNumber
	
	(**************** To  Enter Line Item Details **************************)
	"Flows/OrderEntry".EnterProductWithPromo itemCode, quantity, PromoCod, WHNumber
	
	(************** To Validate Promocode ******************)
	"Flows/OrderEntry".GetPromoCodevalue PromoCod
	
	(*************** To Apply Blanket  Agreement **********************)
	"Flows/OrderEntry".ApplyBlanketAgreement BlanketAgreement
	
	(**************** To Close Order entry Screen ****************************)
	"M3/OIS101".closeFromOrderLines
	
	set ExcelFile to workbook(ResourcePath("6-data.xlsx"))
	set worksheet to ExcelFile.Worksheet("Sheet1")
	Put dataIndex - 1 into IndexIn
	put coNumber into Cell(worksheet, "V" & indexIn)
	
	log coNumber && customerNumber && coType && PO && TagField && DeliveryTerm && DeliveryMethod && TransactionResonCode && itemCode && quantity && PromoCod && WHNumber
end repeat

"Flows/Application".exitApp