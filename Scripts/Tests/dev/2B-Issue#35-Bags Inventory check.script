(* 
Name: Bulk MO
Description: 
Author: Himanshu


// declare login variables
global username, password, coNum, prodNum


// initialize login variables
"Datastore".setLoginVariables 2

// initialize data line counter
put 5 into dataIndex

(************** Start Test ***************)
repeat forever
	
	(************** Set up data *************)
	//initialize data variables
	DataStore.setDataScript2 dataIndex
	
	//increment counter
	put dataIndex + 1 into dataIndex
	
	//break if no more data
	if coNum is empty then exit repeat
	
	Log "CO# " & coNum
	
	(*>>>>>>>>>>>Scheduling>>>>>>>>>>>>*)
	// log in to application
	"Flows/Application".login username, password
	
	(*>>>>>>>>>>>Scheduling>>>>>>>>>>>>*)
	put "Flows/Scheduling".doScheduling(coNum) into schedNum
	put "M3/PMS100".recordMO() into moNum
	
	
	(************** Picking ******************)
	"M3/PMS100".pick
	"M3/PMS100".close
	
	(************** Manufacturing/Packing ******)
	Log "Do manufacturing"
	
	"Flows/Application".exitApp
	
	"Flows/ManufacturingPacking".doDCAManufacturing "ajenkins", "Acushnet#1", moNum
	(************** Packing ******************)
	(*put "Flows/ManufacturingPacking".validatePacking(username,password,coNum) into delNum*)
	
	"Flows/Other".recordRun coNum, moNum, schedNum, delNum
end repeat


generateMOCO
to generateMOCO
	// declare login variables
	global username, password

	// initialize login variables
	--"Datastore".setLoginVariables 2
	
	//log in to AGS
	--"M3/Application".open
--"Flows/Application".login username, password
	
	(*>>>>>>>>Start Order Entry>>>>>>>>>>>>>*)
	"Flows/OrderEntry".enterNewOrder "US00025028", "USA", "",""
	put "Flows/OrderEntry".recordCONumber() into coNum
	"Flows/OrderEntry".enterProduct "TB7SX14CC", "ConfigB5"
	(*"Flows/OrderEntry".enterProductAndQuantity "TA5TVBPC", "1"*)
	
	Log "CONUM:" && coNum
	
	--Log "Exit AGS"
	--"M3/Application".close
	
	//don't continue running the script
	(*throw "Finished!", "some comment"*)
end generateMOCO

to doFullRun
	// declare login variables
	global username, password, prodNum
	// initialize login variables
	"Datastore".setLoginVariables 2
	
	"M3/Application".open
	"Flows/Application".login username, password
	
	(*>>>>>>>>>>Order Entry>>>>>>>>>>>>>*)
	"Flows/OrderEntry".enterNewOrder "US00025028", "USA", "US-Gear-06"
	put "Flows/OrderEntry".recordCONumber() into coNum
	//"Flows/OrderEntry".enterProductAndQuantity "TA5TVBPC", "1"
	"Flows/OrderEntry".enterProduct "TB7SX14CC", "ConfigB5"
	set ExcelFile to workbook(ResourcePath("2-data-out-of-stock-sample-bags"))
	set worksheet to ExcelFile.Worksheet("Sheet2")
	set  Cell(worksheet, "A2") to coNum

	(*>>>>>>>>>>>Scheduling>>>>>>>>>>>>*)
	put "Flows/Scheduling".doScheduling(coNum) into schedNum
	if schedNum <>""
		put "M3/PMS100".recordMO() into moNum
		
		(************** Picking ******************)
		"M3/PMS100".pick
		"M3/PMS100".close
		
		(************** Manufacturing/Packing ******)
		Log "Do manufacturing"
		if isAccessory(prodNum) then
			"Flows/ManufacturingPacking".doManufacturingM3 coNum, moNum
			(************** Packing ******************)
			// add KPack here by moving working code from function "doFullRun"
			"Flows/Application".exitApp
		else
			"Flows/Application".exitApp
			"Flows/ManufacturingPacking".doDCAManufacturing moNum
			(************** Packing ******************)
			put "Flows/ManufacturingPacking".validatePacking(username,password,coNum) into delNum
		end if
		"Flows/Other".recordRun coNum, moNum, schedNum, delNum
	else 
		LogWarning "Inventory Shortage - Requested Quantity not Available in ATP"
		
		"Flows/Application".exitApp
	end if 
end doFullRun


to isAccessory prodNum
	if the second character of prodNum is "A" then
		return TRUE
	end if
end isAccessory

to isBag prodNum
	if the second character of prodNum is "B" then
		return TRUE
	end if
end isAccessory
*)
--   >>>>>           >>>>>>>>>    >>>>>>>>> >>>>>>>>>     >>>>>>>>>
global coNum, docPath,schedNum,coCount, runCount
put  (3014010597,3013837827,3014010598,3012816220,3013990247,3013971923,3013996649,3013747353) into ItemList
set coCount to 0
set runCount to 1
put createDocumentCO(runCount) into  docPath
Repeat with each item coNum of ItemList
	
	put doScheduling(coNum) into schedNum
	if schedNum <> "noStock"
		LogSuccess "Scheduling Done For this CO"
	else 
		LogWarning " Inventory Out of Stock ! !  "
	end if
	documentCOgenerated (docPath,coNum)
	set coCount to coCount +1
	
End Repeat
documentTotalCO (docPath,coCount)
--   >>>>>           >>>>>>>>>    >>>>>>>>> >>>>>>>>>     >>>>>>>>>
to doScheduling coNumber
	Log "Do scheduling"
	"M3/PMS170".open
	"M3/PMS170".lookUp coNumber
	put "M3/PMS170".recordProdNum into prodNum
	if  "M3/RPS010".inventoryCheck() is "inStock"
		put "M3/PMS170".createScheduleNumber() into scheduleNumber
		"M3/PMS170".scheduleNew scheduleNumber
		"M3/PMS170".releaseMO
		"M3/PMS170".close
		"M3/PMS100".open
		"M3/PMS100".lookupSchedule scheduleNumber
		"M3/PMS100".printShopTraveler scheduleNumber
		return scheduleNumber
	else
		"M3/PMS170".close
		LogWarning "Insuuficient Stock in Inventory for CO# :- "&coNumber
		return "noStock"
	end if
end doScheduling



to createDocumentCO runCounter
	put ScriptResults() into tst
	put item 1 of tst into tst2
	put property "LogFile" of tst2 into tst3
	put tst3 into flPath
	delete "LogFile.txt" from flPath
	set flName to "InventoryChecked" &runCounter &".txt" 
	--set fileResult to filePath&"GeneratedCoNum" &runCounter &".xlsx"
	set fileResult to flPath &flNam
	create file fileResult
	open file fileResult for updating 
	put crlf into temp
	write " Run Deatils : " &ctr &temp to file fileResult at eof
	close file fileResult
	return fileResult
end createDocumentCO

to documentCOgenerated fileResult,CreatedCO
	open file fileResult for updating --update
	put crlf into temp
	write  CreatedCO &temp to file fileResult at eof
	close file fileResult
end documentCOgenerated

to documentTotalCO fileResult, COcount
	open file fileResult for updating --update
	put crlf into temp
	write  "Total CO Created in this Run : " &COcount &temp to file fileResult at eof
	close file fileResult
end documentTotalCO
