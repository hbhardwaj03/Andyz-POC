(* 
Name: Data-driven end to end custom bag processing
Description: Driven by an excel spreadsheet of test scenario values, this script executes and end to end custom bag flow on the scenario. 
Author: Himanshu Bhardwaj 
 *)


//declare test variables
global username, password, customerNum, coType, PO
global itemCode, productQuantity, DCAUser, DCAPswrd, COcounter

//declare data variables
global dataIndex, custNum, custPO, tag, delTerm
global delMeth, style, color, ConfigCode,BlnktAgrmnt,Priority 
//initialize test variables
"DataStore".setGlobalsScript1
//initialize data line counter
put 2 into dataIndex
set COcounter to 0
repeat forever
	//initialize data variables (sets global data variables and logs them)
	DataStore.setDataScript1 dataIndex 
	//increment counter
	put dataIndex + 1 into dataIndex
	
	//break if no more data
	if custNum is empty then exit repeat
	
	(************** Start flow ****************)
	"Flows/Application".login username, password
	
	(************** Order entry ***************)
	
	"Flows/OrderEntry".orderWithDeliveryInfo custNum, custPO,delTerm,delMeth,"CSH",Priority // parameterList ( custNum,custPO,delTerm,delMeth,payMeth, priority)
	put "Flows/OrderEntry".recordCONumber() into coNum
	set COcounter to COcounter +1
	"Flows/OrderEntry".enterProduct color,"", productQuantity,ConfigCode  // Parameters: colorSKU, PromoCod,itemQty, ConfigurationNo
	
	(************** Record CO Num ******************** *)	
	"Datastore".updateXcelData "1-data.xlsx", "ResultIssue41", "A"& dataIndex, coNum
	(************** Exit M3 ******************** *)	
	--"M3/OIS101".closeFromOrderLines
	"Flows/Application".exitApp
	
	(************** Scheduling ***************)
	(*
		"Flows/Application".login username, password
		put doScheduling(coNum) into schedNum
		if schedNum <> "noStock"
			LogSuccess "Scheduling Done For this CO"
		else 
			next repeat
		end if
		put "M3/PMS100".recordMO() into moNum

		(************** Exit M3 ******************** *)
		"Flows/Application".exitApp   
		

	                                 (************** Picking ******************)
		"Flows/Picking".doPicking
		
                                               	(************** Manufacturing *************)
	wait 5
	"Flows/Other".recordRun coNum, moNum, schedNum, delNum
	"Flows/ManufacturingPacking".doDCAManufacturing DCAUser, DCAPswrd, moNum
	

	                                                   (************** Packing ******************)

	(*put "Flows/ManufacturingPacking".validatePacking(username,password,coNum) into delNum*)
	"Flows/Other".recordRun coNum, moNum, schedNum, delNum
	
	
                                                             (************** Shipping *****************)
"Flows/Shipping".doShipping delNum
"Flows/Shipping".validateShipping coNum
*)	
end repeat 
Log "Total CO created :" & COcounter
--documentTotalCO DocPath, COcounter
"Datastore".updateXcelData "1-data.xlsx", "ResultIssue41", "A"& dataIndex, COcounter& "CO Created"


to doScheduling coNumber
	Log "Do scheduling"
	"M3/PMS170".open
	"M3/PMS170".lookUp coNumber
	put "M3/PMS170".recordProdNum into prodNum
	if  "M3/RPS010".inventoryCheck() is "inStock"
		put "M3/PMS170".createScheduleNumber() into scheduleNumber
		"M3/PMS170".scheduleNew scheduleNumber
		"M3/PMS170".releaseMO
		"M3/PMS170".close
		"M3/PMS100".open
		"M3/PMS100".lookupSchedule scheduleNumber
		"M3/PMS100".printShopTraveler scheduleNumber
		return scheduleNumber
	else
		"M3/PMS170".close
		LogWarning "Insuuficient Stock in Inventory for CO# :- "&coNumber
		return "noStock"
	end if
end doScheduling


---------------------------->>>>>>>>>>> >  >  >  >  >  >--------------------------------------------------------------------
to testColor
	set itemColor to 0
	set itemQty to 1
	"M3/OIS101".readColorNenterQty itemColor, itemQty
end testColor

---------------------------->>>>>>>>>>> >  >  >  >  >  >--------------------------------------------------------------------

to createDocumentCO runCounter

	put ScriptResults() into tst
	put item 1 of tst into tst2
	put property "LogFile" of tst2 into tst3
	put tst3 into flPath
	delete "LogFile.txt" from flPath
	set flName to "GeneratedCoNum" &runCounter&".txt" 
	--set fileResult to filePath&"GeneratedCoNum" &runCounter &".xlsx"
	set fileResult to flPath &flName
	create file fileResult
	open file fileResult for updating 
	put crlf into temp
	write " Run Deatils : " &ctr &temp to file fileResult at eof
	close file fileResult
	return fileResult
end createDocumentCO

to documentCOgenerated fileResult,CreatedCO
	open file fileResult for updating --update
	put crlf into temp
	write  CreatedCO &temp to file fileResult at eof
	close file fileResult
end documentCOgenerated

to documentTotalCO fileResult, COcount
	open file fileResult for updating --update
	put crlf into temp
	write  "Total CO Created in this Run : " &COcount &temp to file fileResult at eof
	close file fileResult
end documentTotalCO
