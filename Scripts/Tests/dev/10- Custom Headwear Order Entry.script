-----------------------------------------------------------  Name:Data-driven end to end custom headwear order entry  ---------------------------------------------------
(* 
Description: Script is only order entry. In the excel file and has associated simple configurations.
These configurations must be data-driven.The configuration options are selected based on the text input of the data file and not hard-coded 
Building the one logo script is the priority for order entry only at this time. 

Author: Himanshu Bhardwaj
 *)
----------------------------------------------------------- >>>>Final Script to be put here>>>> ---------------------------------------------------------------
(*
//declare login variables
global username, password,

//declare data variables
global dataIndex, custNum, custPO, tag, delTerm,coType
global delMeth, style, color, ConfigCode,trnsctnResn,Priority,blnktAgrmnt

//initialize test variables
"DataStore".setGlobalsScript10

//initialize data line counter
put 2 into dataIndex

(************** Start Test ***************)
repeat forever
	
	(************** Set up data *************)
	
	put (0) into badData --skip known bad entries in test data
	// 13 no straps option in config
	// 23 extra page in CO creation (OIS100V)
	repeat while dataIndex is in badData
		put dataIndex + 1 into dataIndex
	end repeat
	
	//initialize data variables (sets global data variables and logs them)
	DataStore.setDataScript1 dataIndex
	logData
	//increment counter
	put dataIndex + 1 into dataIndex
	//break if no more data
	if custNum is empty then exit repeat
	
	(************** Start flow ****************)
	"Flows/Application".login username, password
	
	(************** Order entry ***************)
	"Flows/OrderEntry".GenericOrderEntry custNum, coType, custPO, tag, delTerm, delMeth, trnsctnResn //blnktAgrmnt
	put "Flows/OrderEntry".recordCONumber() into coNum
	"Flows/OrderEntry".enterProduct style, ConfigCode
	
	(************** Exit *********************)
	"Flows/Application".exitApp
	
	logData
end repeat

*)

----------------------------------------------------------->> > >  >  SAND-BOX Area  >  > > >>------------------------------------------------------

//declare test variables
global username, password, coNum, dataIndex
global custNum
global custPO
global entryStyle
global colorSku
global orderQty
global proofReqd
global titleRFtype
global frontTitleColor
global frontTitleOutline
global numOfCustmztn
global locatn1
global custmztn1
global pers1TextBox
global pers1Letr
global pers1TextShape
global pers1Color
global logo1Style
global logo1ID
global logo1ColorInstrctn
global orderNotesYorN

//declare data variables

put 2 into dataIndex

repeat 2 times
	
	"Datastore".setDataScript10
	"Datastore".setLoginVariables 2
	"M3/Application".open
	"M3/Login".login userName, password
	
	
	--to doFullRun
	
	//initialize test variables
	--"DataStore".setGlobalsScript1
	
	
	--DataStore.setDataScript10 dataIndex
	--logData
	
	//increment counter
	put dataIndex + 1 into dataIndex
	
	//break if no more data
	//if custNum is empty then exit repeat
	
	(************** Start flow ****************)
	--"Flows/Application".login username, password
	
	(************** Order entry ***************)
	//"Flows/OrderEntry".enterNewOrder custNum, coType, custPO
	//"Flows/OrderEntry".GenericOrderEntry custNum, coType, custPO, tag, delTerm, delMeth, BlnktAgrmnt
	
	--"Flows/OrderEntry". CreateNewOrder custNum, coType, custPO, tag, delTerm, delMeth,trnsctnResn,BlnktAgrmnt
	Log "Enter new order"
	"M3/OIS300".open
	"M3/Application".checkZoomLevel 75
	"M3/OIS300".startNewOrder
	Wait while ImageFound("M3/OIS300/CustomerNumberField/CustomerNumberField")
	"M3/OIS300".enterCustomerNumber custNum,"",""
	"M3/OIS300".submitOIS100A 
	"M3/OIS300".enterCustomersPO custPO
	"M3/OIS300".submitOIS100G
	"M3/OIS300".acceptPOWarning
	"M3/OIS300".submitOIS100F
	"M3/OIS300".submitOIS100H
	"M3/OIS300".submitOIS100E ""
	"M3/OIS300".submitOIS102H
	
	put "Flows/OrderEntry".recordCONumber() into coNum
	
	"M3/OIS101".enterItemCode entryStyle --itemCode
	wait 1
	--"M3/OIS101".enterItemQuantity orderQty --quantity
	Click (130,300)
	TypeText orderQty -- "1"
	Click Image:"M3/OIS101/ConfiqStyleButton", WaitFor:10
	
	
	
	customize proofReqd
	customize titleRFtype
	customize frontTitleColor
	customize frontTitleOutline
	customize numOfCustmztn
	customize locatn1
	if custmztn1 <>empty then customize custmztn1
	
	if pers1TextBox <>empty then 
		TypeText Return
		Click "M3/OIS101/PersonalizationField"
		TypeText pers1TextBox
		Click "M3/OIS101/PersonalizationNextButton"
	end if 
	
	if pers1Letr <>empty then customize pers1Letr
	if pers1TextShape <>empty then customize pers1TextShape
	if pers1Color <>empty then customize pers1Color
	if logo1Style <>empty then customize logo1Style
	
	if logo1ID <>empty then customize logo1ID
	if ImageFound(5, "M3/Configurations/configuration001/logoID/logoID_OkWindow")then click "M3/Configurations/configuration001/logoID/logoID_OkWindow"
	
	if logo1ColorInstrctn <>empty then customize logo1ColorInstrctn
	if orderNotesYorN <>empty then customize orderNotesYorN
	
	"M3/OIS101".closeOrderLines
	"M3/OIS300".close
	"Flows/Application".exitApp
end repeat

to customize configEntity
	put split (configEntity, " ") into temp
	put item 1 of temp into configValueCode
	if item 2of temp is  "-"
		put item 3 of temp into configValueText
	else
		put item 2 of temp into configValueText
	end if
	KeyDown controlKey
	TypeText "a"
	KeyUp controlKey
	TypeText deleteKey
	TypeText configValueCode
	wait 1
	TypeText returnKey
end customize


to ReadAndCustomize configEntity
	put split (configEntity, " ") into temp
	put item 1 of temp into configValueCode
	if item 2of temp is  "-"
		put item 3 of temp into configValueText
	else
		put item 2 of temp into configValueText
	end if
	if imageFound(3,text: configValueCode)
		put imageLocation(text:configValueCode) into loc
		click (loc +(254,0))
		Log configEntity &" : is selected"
	end if
end ReadAndCustomize

--set ImageRectangle((15,722),(862,760))

(************** Exit *********************)
--
--end doFullRun






